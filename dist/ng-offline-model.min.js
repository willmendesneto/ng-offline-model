(function(window, angular, undefined) {
'use strict';
angular.module("keepr.ngOfflineModel",[]),angular.module("keepr.ngOfflineModel").service("CryptoOfflineStorage",function(){var loadCrypto="undefined"!=typeof CryptoJS;return{secret:"",storageType:"localStorage",init:function(opts){angular.extend(this,opts)},encrypt:function(object,secret){var message=JSON.stringify(object);return loadCrypto?CryptoJS.TripleDES.encrypt(message,secret):message},decrypt:function(encrypted,secret){var decrypted=loadCrypto?CryptoJS.TripleDES.decrypt(encrypted,secret):JSON.parse(encrypted);return loadCrypto?JSON.parse(decrypted.toString(CryptoJS.enc.Utf8)):decrypted},get:function(key){var encrypted=window[this.storageType].getItem(key);return encrypted&&this.decrypt(encrypted,this.secret)},set:function(key,object){if(!object)return this.remove(key),!1;var encrypted=this.encrypt(object,this.secret);return window[this.storageType].setItem(key,encrypted),!0},remove:function(key){return window[this.storageType].removeItem(key),!0},clearAll:function(){return window[this.storageType].clear(),!0}}}),angular.module("keepr.ngOfflineModel").factory("ngOfflineModel",function(CryptoOfflineStorage){var maxListItems=function(input,elementKey){return input.map(function(item){return item[elementKey]}).reduce(function(previous,current){return Math.max(previous,current)},0)},_items=null,_storageType="localStorage";return{primaryKey:"_id",fields:null,key:null,secret:"my-awesome-key",init:function(_items,params){params=params||{},angular.extend(this,params),CryptoOfflineStorage.storageType=_storageType,CryptoOfflineStorage.init({secret:this.secret});var _itemsCached=CryptoOfflineStorage.get(this.key);return angular.isArray(_itemsCached)&&(_items=_itemsCached),angular.isArray(this.fields)&&(_items=this.createValueObjects(_items)),CryptoOfflineStorage.set(this.key,_items),this.setListItems(_items,params),this},createValueObjects:function(items){var self=this;return items=items.map(function(item){return self.createValueObject(item)})},createValueObject:function(item){var obj={};return angular.forEach(this.fields,function(field){obj[field]=item[field]||""}),obj},setStorageType:function(storageType){return _storageType=storageType,this},setKey:function(key){return this.key=key,this},getKey:function(){return this.key},setListItems:function(items){return _items=items,this},getListItems:function(){return _items},setFields:function(fields){return this.fields=fields,this},countTotalItems:function(items){return maxListItems(items,this.primaryKey)+1},create:function(item){return item=this.createValueObject(item),item[this.primaryKey]=this.countTotalItems(_items),_items.push(item),CryptoOfflineStorage.set(this.key,_items),_items},update:function(item){var self=this;return _items=_items.map(function(element){return element[self.primaryKey]===item[self.primaryKey]&&(element=self.createValueObject(item)),element}),CryptoOfflineStorage.set(this.key,_items),_items},"delete":function(index){var db=this.getListItems(),self=this,firstItem=db.filter(function(element){return element[self.primaryKey]===index})[0];return firstItem?(db=db.filter(function(element){return element[self.primaryKey]!==firstItem[self.primaryKey]}),this.setListItems(db),CryptoOfflineStorage.set(this.key,db),firstItem):!!firstItem},clearAll:function(){return _items=[],CryptoOfflineStorage.clearAll()}}});
})(window, window.angular);